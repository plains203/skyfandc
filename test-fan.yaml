packages:
  skyfan.tuya_fan: !include
    file: tuya_fan.yaml  
  skyfan.tuya_light: !include
     file: tuya_light.yaml  
  skyfan.sensor_power_fan: !include
    file: sensor_power_fan.yaml 
  skyfan.sensor_power_light: !include
     file: sensor_power_light.yaml
  skyfan.sensor_rssi: !include
     file: sensor_rssi.yaml

substitutions:
  device_name: test-fan
  ip_address: 10.1.0.143
  fan_name: test-skyfan
  light_name: test-ceilinglight
  skyfan_model: "SKY1203"
  fan_rssi: "test-SkyFanDC-RSSI"

esphome:
  name: ${device_name}
  name_add_mac_suffix: true
  project:
    name: james.SkyFanDC
    version: "0.3"
  on_boot: #Setup temperature reading so you don't get a random reading come through at startup
    priority: -100
    then:
      - switch.turn_on: led
      - delay: 2s
      - switch.turn_off: led
      
esp32:
  board: m5stack-atom
  framework:
    type: esp-idf

#This may not be required in the future
#external_components:
#  - source:
#      type: git
#      url: https://github.com/plains203/esphome
#      ref: dev
#    components: [ tuya ]

api:
  # This ensures BLE scanning only happens after the wifi is up and 
  # the device is connected to HomeAssistant. This is particularly
  # important for ESP32-C3 devices, but is good for all.
  on_client_connected:
     - esp32_ble_tracker.start_scan:
        continuous: true
  # Disable BLE tracking when there are no active api connections
  on_client_disconnected:
    if:
      condition:
        not:
          api.connected:
      then:
        - esp32_ble_tracker.stop_scan:
# Logger not using the serial port as tuya needs it
logger:
  baud_rate: 0

# Version 0.2 has an i2c JST SH 4Pin Plug and uses the following pins
# Version 0.1 did use pin 4 as the power pin for the NTC
#i2c:
#  sda: 4
#  scl: 5
#  scan: true

ota:
  platform: esphome

wifi:
  ssid: !secret
  password: !secret
  
  domain: !secret
  
  manual_ip:
    static_ip: ${ip_address}
    gateway: 10.1.1.254
    subnet: 255.255.254.0
    
captive_portal:

esp32_ble_tracker:
  scan_parameters:
    # Don't auto start BLE scanning, we control it in the `api` section above.
    continuous: False
    
    active: True # send scan-request packets to gather more info, like device name for some devices.

    interval: 320ms # default 320ms - how long to spend on each advert channel
    window:   300ms  # default 30ms - how long to actually "listen" in each interval. Reduce this if device is unstable.
    # If the device cannot keep up or becomes unstable, reduce the "window" setting. This may be
    # required if your device is controlling other sensors or doing PWM for lights etc.

bluetooth_proxy:
  active: True  # allows outbound connections from HA to devices.

uart:
  rx_pin: 22
  tx_pin: 19
  baud_rate: 9600
  
tuya:
  id: tuyamcu 
  
switch:
  - platform: gpio
    pin:
      number: 2
      inverted: true
    id: led